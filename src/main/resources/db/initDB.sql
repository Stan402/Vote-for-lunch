DROP TABLE user_roles
IF EXISTS;
DROP TABLE dishes
IF EXISTS;
DROP TABLE votes
IF EXISTS;
DROP TABLE restaurants
IF EXISTS;
DROP TABLE users
IF EXISTS;
DROP SEQUENCE global_seq
IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ
  AS INTEGER
  START WITH 100000;

CREATE TABLE users
(
  id       INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name     VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL
);
CREATE UNIQUE INDEX users_unique_name_idx
  ON USERS (name);

CREATE TABLE user_roles
(
  user_id INTEGER NOT NULL,
  role    VARCHAR(255),
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES USERS (id)
    ON DELETE CASCADE
);

CREATE TABLE restaurants
(
  id   INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name VARCHAR(255) NOT NULL
);
CREATE UNIQUE INDEX restaurants_unique_name_idx
  ON restaurants (name);

CREATE TABLE dishes
(
  id      INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  rest_id INTEGER      NOT NULL,
  date    TIMESTAMP    NOT NULL,
  name    VARCHAR(255) NOT NULL,
  price   INTEGER      NOT NULL,
  FOREIGN KEY (rest_id) REFERENCES restaurants (id)
    ON DELETE CASCADE
);

CREATE TABLE VOTES
(
  id      INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  date    TIMESTAMP NOT NULL,
  rest_id INTEGER   NOT NULL,
  user_id INTEGER   NOT NULL,
  CONSTRAINT user_date_idx UNIQUE (user_id, date),
  FOREIGN KEY (rest_id) REFERENCES restaurants (id)
    ON DELETE CASCADE
);
